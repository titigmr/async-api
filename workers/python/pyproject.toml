[project]
name = "AsyncTaskAPI"
version = "0.1.0"
description = "Generic api for async tasks"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "loguru>=0.7.3",
    "aio-pika>=9.5.5",
]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 120
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules/
select = [
  "E",      # pycodestyle errors
  "F",      # pyflakes
  "ANN",    # annotations
  "FBT",
  "COM",
  "B",      # flake8-bugbear
  "I",      # isort (import sorting)
  "UP",     # pyupgrade (modernisation du code)
  "S",      # flake8-bandit (sécurité)
  "C4",     # flake8-comprehensions (simplification des compréhensions)
  "TID",    # flake8-tidy-imports (gestion des imports non utilisés)
  "SIM",    # flake8-simplify (simplifications de code)
  "PL",     # pylint rules
  "RUF",    # ruff-specific rules
  "FAST",    # fastapi rules
  "ASYNC",   # async support
  "ICN",
  "PIE",
  "T20",
  "PYI",
  "PT",
  "TC",
  "RET",
  "ARG",
  "PTH"
]
ignore = [
  "S101",
  "B008",
  "PLR0913",
  "PLR2004",
  "RUF012"
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "S"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
#unsafe-fixes = true
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"


[tool.ruff.lint.isort]
known-first-party = ["api", "listener"]

[dependency-groups]
dev = [
    "aiosqlite>=0.21.0",
    "coverage>=7.9.2",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
]

[tool.coverage.run]
source = [
    ".",
]
command_line = "-m pytest --junitxml=junit.xml"
omit = [
    "tests/*",
    "__init__.py"
]

[tool.coverage.report]
exclude_also = [
    'def __repr__',
]
skip_covered = false
precision = 2
sort = "-miss"
