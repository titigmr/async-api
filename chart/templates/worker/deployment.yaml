{{- if not .Values.worker.statefulset }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s" (include "helper.fullname" .) "worker" }}
  labels: {{- (include "helper.labels" (dict "root" . "componentName" "worker")) | nindent 4 }}
spec:
  {{- if not .Values.worker.autoscaling.enabled }}
  replicas: {{ .Values.worker.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.worker.revisionHistoryLimit | default 10 }}
  selector:
    matchLabels: {{- include "helper.selectorLabels" (dict "root" . "componentName" "worker") | nindent 6 }}
  strategy:
    type: {{ .Values.worker.strategy.type }}
    {{- if eq .Values.worker.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.worker.strategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.worker.strategy.rollingUpdate.maxSurge }}
    {{- end }}
  template:
    metadata:
      {{- if or .Values.worker.podAnnotations .Values.worker.secrets .Values.worker.env .Values.global.env .Values.global.secrets }}
      annotations:
        {{- include "helper.checksum" (list $ "/worker/configmap.yaml") | nindent 8 }}
        {{- include "helper.checksum" (list $ "/worker/secret.yaml") | nindent 8 }}
        {{- if .Values.worker.podAnnotations }}
        {{- toYaml .Values.worker.podAnnotations | nindent 8 }}
        {{- end }}
      {{- end }}
      labels: {{- include "helper.labels" (dict "root" . "componentName" "worker") | nindent 8 }}
        {{- if .Values.worker.podLabels }}
        {{- toYaml .Values.worker.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.worker.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.worker.imagePullSecrets }}
      - name: {{ .name }}
      {{- end }}
      {{- end }}
      {{- if (get .Values "worker").serviceAccount.enabled }}
      serviceAccountName: {{ .Values.worker.serviceAccount.name | default (printf "%s-%s" (include "helper.fullname" .) "worker") }}
      {{- end }}
      {{- if .Values.worker.podSecurityContext }}
      securityContext: {{- toYaml .Values.worker.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.worker.initContainers }}
      initContainers: {{- tpl (toYaml .Values.worker.initContainers) . | nindent 6 }}
      {{- end }}
      containers:
      - name: worker
        {{- if .Values.worker.securityContext }}
        securityContext: {{- toYaml .Values.worker.securityContext | nindent 10 }}
        {{- end }}
        image: "{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
        {{- if .Values.worker.command }}
        command:
        {{- range .Values.worker.command }}
        - {{ . | quote }}
        {{- end }}
        {{- end }}
        {{- if .Values.worker.args }}
        args:
        {{- range .Values.worker.args }}
        - {{ . | quote }}
        {{- end }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.worker.containerPort }}
          protocol: TCP
        {{- if .Values.worker.extraPorts }}
          {{- toYaml .Values.worker.extraPorts | nindent 8 }}
        {{- end }}
        {{- if or .Values.worker.env .Values.global.env .Values.global.secrets .Values.global.secrets .Values.worker.envFrom }}
        envFrom:
        {{- if or .Values.worker.env .Values.global.env }}
        - configMapRef:
            name: {{ printf "%s-%s" (include "helper.fullname" .) "worker" }}
        {{- end }}
        {{- if or .Values.worker.secrets .Values.global.secrets }}
        - secretRef:
            name: {{ printf "%s-%s" (include "helper.fullname" .) "worker" }}
        {{- end }}
        {{- if .Values.worker.envFrom }}
          {{- toYaml .Values.worker.envFrom | nindent 8 }}
        {{- end }}
        {{- end }}
        {{- if .Values.worker.probes.startupProbe.enabled }}
        startupProbe:
          httpGet:
            path: {{ .Values.worker.probes.healthcheck.path }}
            port: {{ .Values.worker.probes.healthcheck.port | default .Values.worker.containerPort }}
          initialDelaySeconds: {{ .Values.worker.probes.startupProbe.initialDelaySeconds }}
          successThreshold: {{ .Values.worker.probes.startupProbe.successThreshold }}
          failureThreshold: {{ .Values.worker.probes.startupProbe.failureThreshold }}
          periodSeconds: {{ .Values.worker.probes.startupProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.worker.probes.startupProbe.timeoutSeconds }}
        {{- end }}
        {{- if .Values.worker.probes.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.worker.probes.healthcheck.path }}
            port: {{ .Values.worker.probes.healthcheck.port | default .Values.worker.containerPort }}
          initialDelaySeconds: {{ .Values.worker.probes.readinessProbe.initialDelaySeconds }}
          successThreshold: {{ .Values.worker.probes.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.worker.probes.readinessProbe.failureThreshold }}
          periodSeconds: {{ .Values.worker.probes.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.worker.probes.readinessProbe.timeoutSeconds }}
        {{- end }}
        {{- if .Values.worker.probes.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.worker.probes.healthcheck.path }}
            port: {{ .Values.worker.probes.healthcheck.port | default .Values.worker.containerPort }}
          initialDelaySeconds: {{ .Values.worker.probes.livenessProbe.initialDelaySeconds }}
          successThreshold: {{ .Values.worker.probes.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.worker.probes.livenessProbe.failureThreshold }}
          periodSeconds: {{ .Values.worker.probes.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.worker.probes.livenessProbe.timeoutSeconds }}
        {{- end }}
        resources: {{- toYaml .Values.worker.resources | nindent 10 }}
        {{- if .Values.worker.volumeMounts }}
        volumeMounts: {{- toYaml .Values.worker.volumeMounts | nindent 8 }}
        {{- end }}
      {{- if .Values.worker.extraContainers }}
        {{- tpl (toYaml .Values.worker.extraContainers) . | nindent 6 }}
      {{- end }}
      {{- if .Values.worker.hostAliases }}
      hostAliases: {{- toYaml .Values.worker.hostAliases | nindent 6 }}
      {{- end }}
      {{- if .Values.worker.nodeSelector }}
      nodeSelector: {{- toYaml .Values.worker.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.worker.affinity }}
      affinity: {{- toYaml .Values.worker.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.worker.tolerations }}
      tolerations: {{- toYaml .Values.worker.tolerations | nindent 6 }}
      {{- end }}
      {{- if .Values.worker.volumes }}
      volumes: {{- toYaml .Values.worker.volumes | nindent 6 }}
      {{- end }}
{{- end }}
