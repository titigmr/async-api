{{- range .Values.workers }}
{{- if and .enabled (eq .type "deployment") }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-worker-%s" (include "helper.fullname" $) .name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "helper.labels" (dict "root" $ "componentName" "worker") | nindent 4 }}
    worker.name: {{ .name }}
    async-api.io/type: worker
    async-api.io/worker-type: {{ .type }}
spec:
  {{- if not (and .kedaAutoscaler .kedaAutoscaler.enabled) }}
  replicas: {{ .deploymentSpec.replicas | default 1 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helper.selectorLabels" (dict "root" $ "componentName" "worker") | nindent 6 }}
      worker.name: {{ .name }}
  template:
    metadata:
      annotations:
        {{- include "helper.checksum" (list $ "/workers/configmap.yaml") | nindent 8 }}
        {{- include "helper.checksum" (list $ "/workers/secret.yaml") | nindent 8 }}
        {{- include "helper.checksum" (list $ "/workers/broker-secret-worker.yaml") | nindent 8 }}
        {{- if .extraAnnotations }}
        {{- toYaml .extraAnnotations | nindent 8 }}
        {{- end }}
      labels:
        {{- include "helper.selectorLabels" (dict "root" $ "componentName" "worker") | nindent 8 }}
        worker.name: {{ .name }}
        async-api.io/type: worker
        async-api.io/worker-type: {{ .type }}
        {{- if .extraLabels }}
        {{- toYaml .extraLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .deploymentSpec.serviceAccountName }}
      serviceAccountName: {{ .deploymentSpec.serviceAccountName }}
      {{- end }}
      {{- if .deploymentSpec.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .deploymentSpec.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
      - name: worker
        image: {{ .deploymentSpec.image.repository }}:{{ .deploymentSpec.image.tag | default "latest" }}
        imagePullPolicy: {{ .deploymentSpec.image.pullPolicy | default "IfNotPresent" }}
        envFrom:
        {{- if not $.Values.broker.urlFromSecret.name }}
        - secretRef:
            name: {{ printf "%s-broker-worker" (include "helper.fullname" $) }}
        {{- else }}
        - secretRef:
            name: {{ $.Values.broker.urlFromSecret.name }}
        {{- end }}
        {{- range .deploymentSpec.envFromSecret }}
        - secretRef:
            name: {{ .secretRef.name }}
            {{- if .secretRef.optional }}
            optional: {{ .secretRef.optional }}
            {{- end }}
        {{- end }}
        {{- range .deploymentSpec.envFromConfigMap }}
        - configMapRef:
            name: {{ .configMapRef.name }}
            {{- if .configMapRef.optional }}
            optional: {{ .configMapRef.optional }}
            {{- end }}
        {{- end }}
        ports:
        - name: health
          containerPort: {{ .deploymentSpec.ports.health | default 8080 }}
          protocol: TCP
        {{- if and .metrics .metrics.enabled }}
        - name: metrics
          containerPort: {{ .deploymentSpec.ports.metrics | default 8080 }}
          protocol: TCP
        {{- end }}
        env:
        {{- if .deploymentSpec.env }}
        {{- toYaml .deploymentSpec.env | nindent 8 }}
        {{- end }}
        {{- if .deploymentSpec.probes }}
        {{- if .deploymentSpec.probes.startupProbe }}
        startupProbe:
          {{- toYaml .deploymentSpec.probes.startupProbe | nindent 10 }}
        {{- end }}
        {{- if .deploymentSpec.probes.readinessProbe }}
        readinessProbe:
          {{- toYaml .deploymentSpec.probes.readinessProbe | nindent 10 }}
        {{- end }}
        {{- if .deploymentSpec.probes.livenessProbe }}
        livenessProbe:
          {{- toYaml .deploymentSpec.probes.livenessProbe | nindent 10 }}
        {{- end }}
        {{- end }}
        {{- if .deploymentSpec.resources }}
        resources:
          {{- toYaml .deploymentSpec.resources | nindent 10 }}
        {{- end }}
        {{- if .deploymentSpec.securityContext }}
        securityContext:
          {{- toYaml .deploymentSpec.securityContext | nindent 10 }}
        {{- end }}
      {{- if .deploymentSpec.nodeSelector }}
      nodeSelector:
        {{- toYaml .deploymentSpec.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .deploymentSpec.affinity }}
      affinity:
        {{- toYaml .deploymentSpec.affinity | nindent 8 }}
      {{- end }}
      {{- if .deploymentSpec.tolerations }}
      tolerations:
        {{- toYaml .deploymentSpec.tolerations | nindent 8 }}
      {{- end }}
      {{- if .deploymentSpec.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml .deploymentSpec.topologySpreadConstraints | nindent 8 }}
      {{- end }}
      {{- if .deploymentSpec.podSecurityContext }}
      securityContext:
        {{- toYaml .deploymentSpec.podSecurityContext | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}
