{{- if not .Values.broker.urlFromSecret.name -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-broker-worker" (include "helper.fullname" .) }}
  labels:
    {{- include "helper.labels" (dict "root" . "componentName" "worker") | nindent 4 }}
    app.kubernetes.io/component: broker
    async-api.io/type: configuration
type: Opaque
data:
  {{- if .Values.broker.url }}
  {{/* Method 1: Direct URL provided */}}
  BROKER_URL: {{ .Values.broker.url | b64enc | quote }}
  {{- else if or .Values.broker.components.host .Values.broker.components.username .Values.broker.components.password }}
  {{/* Method 2: Components provided - generate URL */}}
  BROKER_URL: {{ printf "%s://%s:%s@%s:%s%s" .Values.broker.components.scheme .Values.broker.components.username .Values.broker.components.password .Values.broker.components.host (.Values.broker.components.port | toString) .Values.broker.components.vhost | b64enc | quote }}
  {{- else if .Values.rabbitmq.enabled }}
  {{/* Method 3: RabbitMQ subchart - generate URL */}}
  {{- if .Values.rabbitmq.auth.password }}
  BROKER_URL: {{ printf "%s://%s:%s@%s:%s%s" .Values.broker.components.scheme .Values.rabbitmq.auth.username .Values.rabbitmq.auth.password (include "chart.rabbitmq.fullname" .) (.Values.rabbitmq.service.ports.amqp | toString) .Values.broker.components.vhost | b64enc | quote }}
  {{- end }}
  {{- end }}
{{- end }}
