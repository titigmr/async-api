#!/bin/bash
API_PORT="${PORT:-8000}"
API_HOST="${HOST:-0.0.0.0}"
APP="${APP:-api}"

# API MODE
if [[ "${APP,,}" == "api" ]]; then
    echo "===== API ====="
    echo "Mode d√©veloppement"
    export PYTHONPATH=$(pwd)/

    # Attendre que la base de donn√©es soit disponible
    echo "üîÑ Attente de la disponibilit√© de la base de donn√©es..."
    DB_HOST="db"
    DB_PORT="5432"
    MAX_RETRIES=30
    RETRY_COUNT=0

    while ! pg_isready -h "$DB_HOST" -p "$DB_PORT" -U postgres > /dev/null 2>&1; do
        RETRY_COUNT=$((RETRY_COUNT + 1))
        if [ $RETRY_COUNT -gt $MAX_RETRIES ]; then
            echo "‚ùå Impossible de se connecter √† la base de donn√©es apr√®s $MAX_RETRIES tentatives"
            exit 1
        fi
        echo "‚è≥ Tentative $RETRY_COUNT/$MAX_RETRIES - Base de donn√©es non disponible, attente..."
        sleep 2
    done

    echo "‚úÖ Base de donn√©es disponible !"

    echo "üöÄ Ex√©cution des migrations..."
    alembic upgrade head
    if [ $? -ne 0 ]; then
        echo "‚ùå √âchec des migrations. Arr√™t du d√©marrage."
        exit 1
    fi

    echo "‚úÖ Migrations appliqu√©es avec succ√®s !"

    uvicorn --host "$API_HOST" --port "$API_PORT" api.main:app --reload
fi

# LISTENER MODE
if [[ "${APP}" == "listener" ]]; then
    echo "===== LISTENER ====="
    echo "Mode d√©veloppement"
    nodemon --legacy-watch --exec python3 listener/main.py
fi