
services:
  api:
    image: github.com/titigmr/asyncapi:v0.1.0
    container_name: api
    volumes:
      - ${PWD}/api:/app/api
      - ${PWD}/config:/app/config
      - ${PWD}/migrations:/app/migrations
      - ${PWD}/scripts/entrypoint_dev.sh:/app/scripts/entrypoint.sh
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
    - "8000:8000"
    depends_on:
    - db
    - broker
    env_file:
    - .env.example
    environment:
      - APP=api
  listener:
    image: github.com/titigmr/asyncapi:v0.1.0
    container_name: listener
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://127.0.0.1:8081/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ${PWD}/api:/app/api
      - ${PWD}/listener:/app/listener
      - ${PWD}/config:/app/config
      - ${PWD}/scripts/entrypoint_dev.sh:/app/scripts/entrypoint.sh
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
    - db
    - broker
    env_file:
    -  .env.example
    environment:
      - APP=listener
  consumer:
    image: github.com/titigmr/consumer:v0.1.0
    container_name: consumer
    volumes:
     - ${PWD}/workers/js/index.js:/app/index.js
    build:
      context: ./workers/js
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - db
      - broker
    env_file:
      -  .env.example
  db:
    image: postgres:17
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      -  .env.example
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tasks
    ports:
      - "5432:5432"
  broker:
    image: rabbitmq:management
    container_name: rabbitmq
    volumes:
      - broker-lib:/var/lib/rabbitmq
      - broker-log:/var/log/rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: kalo
      RABBITMQ_DEFAULT_PASS: kalo

volumes:
  db-data:
    driver: local
  broker-lib:
    driver: local
  broker-log:
    driver: local
